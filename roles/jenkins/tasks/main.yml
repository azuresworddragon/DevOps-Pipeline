---
- name: Add key Jenkins repository key
  apt_key:
    url: "https://pkg.jenkins.io/debian/jenkins-ci.org.key"
    state: present

- name: Add Jenkins repository to sources.list
  apt_repository:
    repo: "deb https://pkg.jenkins.io/debian-stable binary/"
    filename: jenkins
    state: present
    update_cache: yes

- name: Install Jenkins
  apt:
    name: jenkins
    state: latest
- name: change the port number to 9090
  lineinfile:
    path: /etc/default/jenkins
    regexp: 'HTTP_PORT='
    line: 'HTTP_PORT=9090'

- name: Starting Jenkins service
  systemd:
    name: jenkins
    state: stopped

- name: Enable firewall
  become: yes
  ufw:
    policy: allow
    state: enabled

- name: Open port 9090
  become: yes
  ufw:
    port: 9090
    rule: allow

- name: Remove current Jenkins wizard state
  become: yes
  file:
    name: "/var/lib/jenkins/jenkins.install.UpgradeWizard.state"
    state: absent

# - name: Assign new Jenkins wizard state
#   become: yes
#   copy:
#     src: "jenkins.install.UpgradeWizard.state"
#     dest: "/var/lib/jenkins/"
#     owner: jenkins
#     group: jenkins
#     mode: 0644

# - name: Assign new Jenkins wizard state - 2
#   become: yes
#   copy:
#     src: "jenkins.install.InstallUtil.lastExecVersion"
#     dest: "/var/lib/jenkins/"
#     owner: jenkins
#     group: jenkins
#     mode: 0644

- name: Create custom init scripts directory.
  file:
    path: "/var/lib/jenkins/init.groovy.d"
    state: directory
    owner: jenkins
    group: jenkins
    mode: 0755

- name: Configure Default Users
  template:
    src: "basic-security.groovy"
    dest: "/var/lib/jenkins/init.groovy.d/"
    owner: jenkins
    group: jenkins
    mode: 0775
  vars:
      jenkins_username: "{{ lookup('env', 'JENKINS_USER') }}"
      jenkins_password: "{{ lookup('env', 'JENKINS_PASSWORD') }}"

- name: Update Sudoers file for Jenkins User
  lineinfile:
    dest: /etc/sudoers
    line: 'jenkins ALL=(ALL) NOPASSWD: ALL'

- name: Restart Jenkins
  systemd:
    name: jenkins
    state: restarted

# - name: Wait for Jenkins to start up
#   uri:
#     url: http://localhost:9090
#     status_code: 200
#     timeout: 5
#   register: jenkins_service_status
#   # Keep trying for 5 mins in 5 sec intervals
#   retries: 60
#   delay: 5
#   until: >
#      'status' in jenkins_service_status and
#      jenkins_service_status['status'] == 200

- name: Wait for restart
  uri:
    url: "http://localhost:9090/cli/"
    status_code: 200
  register: result
  until: result.status == 200
  retries: 60
  delay: 10

- name: Remove User-Creation Script
  file:
    path: "/var/lib/jenkins/init.groovy.d/basic-security.groovy"
    state: absent
  become: yes

- name: Install Jacoco Plugins
  jenkins_plugin:
    name:
      - 'jacoco'
    url_username: "{{ lookup('env', 'JENKINS_USER') }}"
    url_password: "{{ lookup('env', 'JENKINS_PASSWORD') }}"
    url: "http://localhost:9090"
    validate_certs: no
  become: yes

- name: Wait for restart
  uri:
    url: "http://localhost:9090/cli/"
    status_code: 200
  register: result
  until: result.status == 200
  retries: 60
  delay: 10

- name: Install timeout Plugins
  jenkins_plugin:
    name:
      - 'build-timeout'
    url_username: "{{ lookup('env', 'JENKINS_USER') }}"
    url_password: "{{ lookup('env', 'JENKINS_PASSWORD') }}"
    url: "http://localhost:9090"
    validate_certs: no
  become: yes

- name: Wait for restart
  uri:
    url: "http://localhost:9090/cli/"
    status_code: 200
  register: result
  until: result.status == 200
  retries: 60
  delay: 10

- name: Installcleanup Plugins
  jenkins_plugin:
    name:
      - 'ws-cleanup'
    url_username: "{{ lookup('env', 'JENKINS_USER') }}"
    url_password: "{{ lookup('env', 'JENKINS_PASSWORD') }}"
    url: "http://localhost:9090"
    validate_certs: no
  become: yes

- name: Restart Jenkins
  systemd:
    name: jenkins
    state: restarted


...
