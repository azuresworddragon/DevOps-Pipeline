---
- name: Check if SSH key exists
  become_user: current_user
  stat:
    path: ~/.ssh/id_rsa.pub
  register: ssh_exists

# - name: debug ssh key
#   debug:
#     msg: "{{ ssh_exists }}"

- name: Generate SSH keys if not exists
  become_user: current_user
  shell: ssh-keygen -N '' -f ~/.ssh/id_rsa
  when: ssh_exists.stat.exists == False

- name: Get public SSH key
  shell: cat ~/.ssh/id_rsa.pub
  register: ssh_key

# - debug:
#     msg: "{{ ssh_key.stdout }}"

# - name: print do token
#   debug:
#     msg: "{{DOTOKEN}}"

- name: Get Digital Ocean SSH-ID
  digital_ocean:
    state: present
    command: ssh
    name: "{{ NODE_NAME }}"
    ssh_pub_key: "{{ ssh_key.stdout }}"
    api_token: "{{ DOTOKEN }}"
  register: new_key

# - debug:
#     msg: "{{ new_key.ssh_key.id }}"

- name: Create Digital Ocean droplet
  digital_ocean:
    state: present
    ssh_key_ids: "{{ new_key.ssh_key.id }}"
    command: droplet
    name: "{{ NODE_NAME }}"
    size_id: "s-1vcpu-1gb"
    region_id: nyc3
    image_id: ubuntu-16-04-x64
    wait_timeout: 500
    api_token: "{{ DOTOKEN }}"
  register: new_droplet

- name: Delete inventory file if present
  file:
    path: "/files/inventory.ini"
    state: absent

- name: Create new inventory file
  file:
    path: "/files/inventory.ini"
    state: touch
    mode: 0777

- name: Add new droplet to inventory
  lineinfile:
    path: "/files/inventory.ini"
    line: "[{{ NODE_NAME }}]\n{{ new_droplet.droplet.ip_address }} ansible_ssh_user=root"

- name: Wait droplet to come online
  pause:
    seconds: 15

- name: Add new droplet as a known host
  shell: ssh-keyscan -H "{{ new_droplet.droplet.ip_address }}" >> ~/.ssh/known_hosts

- name: Add droplet to in-memory inventory
  become: yes
  add_host:
    hostname: "{{ new_droplet.droplet.ip_address }}"
    group: "{{ NODE_NAME }}"
...
