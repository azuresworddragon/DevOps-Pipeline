---
- name: Provision Jenkins Server on Digital Ocean
  hosts: localhost
  connection: localhost
  roles:
    - role: droplet
      DOTOKEN: "{{ lookup('env','DOTOKEN') }}"
      NODE_NAME: jenkins
      NODE_GROUP: jenkins

- name: Setting up environment variables on Jenkins Server
  hosts: jenkins
  gather_facts: no
  pre_tasks:
    - name: Install Python2
      raw: apt-get -y install python-simplejson
      become: yes

    - name: Install pip
      apt:
        name: python-pip
        force: yes
        update_cache: yes

    - name: Install dopy
      become: yes
      raw: pip install 'dopy>=0.3.5,<=0.3.5'

    - name: Add Ansible ppa
      apt_repository:
        repo: 'ppa:ansible/ansible'

    - name: Install Ansible
      apt:
        name: ansible
        force: yes
        update_cache: yes

    - name: ip
      shell: curl ipinfo.io/ip
      register: ip_add

    - name: ip_address
      debug:
        msg: "{{ip_add.stdout}}"

    - name: Save Droplet IP into environment variable
      become: yes
      lineinfile:
        path: /etc/environment
        regexp: "JENKINS_IP="
        line: "JENKINS_IP={{ip_add.stdout}}"

  tasks:
    - lineinfile: dest=/etc/environment line='DOTOKEN={{ lookup('env','DOTOKEN') }}'
    - lineinfile: dest=/etc/environment line='MONGO_PORT={{ lookup('env', 'MONGO_PORT') }}'
    - lineinfile: dest=/etc/environment line="MONGO_IP={{ lookup('env','MONGO_IP') }}"
    - lineinfile: dest=/etc/environment line="MONGO_USER={{ lookup('env','MONGO_USER') }}"
    - lineinfile: dest=/etc/environment line="MONGO_PASSWORD={{ lookup('env','MONGO_PASSWORD') }}"
    - lineinfile: dest=/etc/environment line="MAIL_USER={{ lookup('env','MAIL_USER') }}"
    - lineinfile: dest=/etc/environment line="MAIL_PASSWORD={{ lookup('env','MAIL_PASSWORD') }}"
    - lineinfile: dest=/etc/environment line="MAIL_SMTP={{ lookup('env','MAIL_SMTP') }}"
    - lineinfile: dest=/etc/environment line="JENKINS_USER={{ lookup('env','JENKINS_USER') }}"
    - lineinfile: dest=/etc/environment line="JENKINS_PASSWORD={{ lookup('env','JENKINS_PASSWORD') }}"
    - lineinfile: dest=/etc/environment line="MYSQL_PASSWORD={{ lookup('env','MYSQL_PASSWORD') }}"
    - lineinfile: dest=/etc/environment line="GIT_TOKEN={{ lookup('env','GIT_TOKEN') }}"
    - lineinfile: dest=/etc/environment line="GIT_EMAIL={{ lookup('env','GIT_EMAIL') }}"
    - lineinfile: dest=/etc/environment line="GIT_NAME={{ lookup('env','GIT_NAME') }}"
    
- name: Configure Jenkins Server
  hosts: jenkins
  roles:
    - mongodb
    - nodejs
    - java8
    - role: mysql
      mysql_pass: "{{ lookup('env', 'MYSQL_PASSWORD') }}"
    - jenkins
    - maven

  tasks:
    - name: remove directories if already exist
      shell: rm -rf /checkbox.io && rm -rf /iTrust2-v2
    - name: Clone Checkbox Repo
      git:
        repo: "https://github.com/chrisparnin/checkbox.io.git"
        dest: "/checkbox.io"
        clone: yes

    - name: Clone iTrust Repo
      git:
        repo: "https://{{ lookup('env', 'GIT_TOKEN') }}@github.ncsu.edu/ubhosle/iTrust2-v2.git"
        dest: "/iTrust2-v2"
        clone: yes

    - name: chmod
      shell: chmod -R 777 /iTrust2-v2 && chmod -R 777 /checkbox.io

    - name: Copy Roles & Playbooks
      copy:
        src: "./files"
        dest: "/"
        mode: 0777
        directory_mode: yes

    - name: chmod
      shell: chmod -R 777 /files

    # - name: Change Mongod.conf
    #   lineinfile:
    #     dest: /etc/mongod.conf
    #     regexp: 'bindIp: 127.0.0.1'
    #     line: "bindIp: 127.0.0.1,{{ lookup('env','JENKINS_IP') }}"

    - name:
      apt: name=dos2unix state=present update_cache=yes
      become: yes
    - name:
      shell: dos2unix /files/itrustbash.sh
      become: yes

- import_playbook: builder.yml

- hosts: jenkins
  vars:
    - git_name: "{{ lookup('env', 'GIT_NAME') }}"
    - git_email: "{{ lookup('env', 'GIT_EMAIL') }}"
  tasks:
    - name: Setting Git username and email
      shell: cd /iTrust2-v2 && git config --global user.name "{{git_name}}" && git config --global user.email "{{git_email}}"

      # Production environment for itrust
    - name: production environment
      file: path=/deploy/production.git state=directory

    - name: initialze a git repository in the production.git
      shell: git init --bare
      args:
        chdir: /deploy/production.git/

    - name: Copy post-receive hook to production git repo
      template:
        src: "templates/post-receive"
        dest: "/deploy/production.git/hooks/post-receive"
        mode: 0777

    - name: production environment
      file: path=/deploy/production-www state=directory

    - name: add origin to production
      shell: git remote add prod file:///deploy/production.git
      args:
        chdir: /iTrust2-v2
      ignore_errors: yes

    - name: Enable firewall
      shell: sudo ufw enable

    - name: Restart mysql server
      shell: service mysql restart

      # Production environment for checkbox
    - name: production environment
      file: path=/deploy/checkbox-prod.git state=directory

    - name: initialze a git repository in the production.git
      shell: git init --bare
      args:
        chdir: /deploy/checkbox-prod.git/

    - name: Copy post-receive hook to production git repo
      template:
        src: "templates/post-receive-checkbox"
        dest: "/deploy/checkbox-prod.git/hooks/post-receive"
        mode: 0777

    - name: production environment
      file: path=/deploy/checkbox-prod-www state=directory

    - name: add origin to production
      shell: git remote add prod file:///deploy/checkbox-prod.git
      args:
        chdir: /checkbox.io
      ignore_errors: yes

...
