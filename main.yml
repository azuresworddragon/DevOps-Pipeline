---
- name: Provision Jenkins Server on Digital Ocean
  hosts: localhost
  connection: localhost
  roles:
    - role: droplet
      DOTOKEN: "{{ lookup('env','DOTOKEN') }}"
      NODE_NAME: jenkins

- name: Setting up environment variables on Jenkins Server
  hosts: jenkins
  gather_facts: no
  pre_tasks:
    - name: Install Python2
      raw: apt-get -y install python-simplejson
      become: yes

    - name: Install pip
      apt:
        name: python-pip
        force: yes
        update_cache: yes

    - name: Install dopy
      become: yes
      raw: pip install 'dopy>=0.3.5,<=0.3.5'

    - name: Add Ansible ppa
      apt_repository:
        repo: 'ppa:ansible/ansible'

    - name: Install Ansible
      apt:
        name: ansible
        force: yes
        update_cache: yes

  tasks:
    - lineinfile: dest=/etc/environment line='DOTOKEN={{ lookup('env','DOTOKEN') }}'
    - lineinfile: dest=/etc/environment line='MONGO_PORT={{ lookup('env', 'MONGO_PORT') }}'
    - lineinfile: dest=/etc/environment line="MONGO_IP={{ lookup('env','MONGO_IP') }}"
    - lineinfile: dest=/etc/environment line="MONGO_USER={{ lookup('env','MONGO_USER') }}"
    - lineinfile: dest=/etc/environment line="MONGO_PASSWORD={{ lookup('env','MONGO_PASSWORD') }}"
    - lineinfile: dest=/etc/environment line="MAIL_USER={{ lookup('env','MAIL_USER') }}"
    - lineinfile: dest=/etc/environment line="MAIL_PASSWORD={{ lookup('env','MAIL_PASSWORD') }}"
    - lineinfile: dest=/etc/environment line="MAIL_SMTP={{ lookup('env','MAIL_SMTP') }}"
    - lineinfile: dest=/etc/environment line="JENKINS_USER={{ lookup('env','JENKINS_USER') }}"
    - lineinfile: dest=/etc/environment line="JENKINS_PASSWORD={{ lookup('env','JENKINS_PASSWORD') }}"
    - lineinfile: dest=/etc/environment line="MYSQL_PASSWORD={{ lookup('env','MYSQL_PASSWORD') }}"
    - lineinfile: dest=/etc/environment line="GIT_TOKEN={{ lookup('env','GIT_TOKEN') }}"
    - lineinfile: dest=/etc/environment line="GIT_EMAIL={{ lookup('env','GIT_EMAIL') }}"
    - lineinfile: dest=/etc/environment line="GIT_NAME={{ lookup('env','GIT_NAME') }}"

  # Dependencies for Checkbox.io - nodejs, nginx, mongodb
  # Dependencies for iTrust2 - java8, chrome, mysql
- name: Configure Jenkins Server
  hosts: jenkins
  roles:
    - nodejs
    - nginx
    - mongodb
    - java8
    - role: mysql
      mysql_pass: "{{ lookup('env', 'MYSQL_PASSWORD') }}"
    - jenkins
    - maven

  vars:
    mysql_pass: "{{ lookup('env','MYSQL_PASSWORD') }}"
    mail_user: "{{ lookup('env','MAIL_USER') }}"
    mail_pass: "{{ lookup('env','MAIL_PASSWORD') }}"

  tasks:
    - name: remove directories if already exist
      shell: rm -rf /checkbox.io && rm -rf /iTrust2-v2
    - name: Clone Checkbox Repo
      git:
        repo: "https://github.com/chrisparnin/checkbox.io.git"
        dest: "/checkbox.io"
        clone: yes

    - name: Clone iTrust Repo
      git:
        # repo: "https://{{ lookup('env', 'GIT_TOKEN') }}@github.ncsu.edu/engr-csc326-staff/iTrust2-v2.git"
        repo: "https://{{ lookup('env', 'GIT_TOKEN') }}@github.ncsu.edu/ubhosle/iTrust2-v2.git"
        dest: "/iTrust2-v2"
        clone: yes

    - name: chmod
      shell: chmod -R 777 /iTrust2-v2 && chmod -R 777 /checkbox.io

    - name: Copy Roles & Playbooks
      copy:
        src: "./files"
        dest: "/"
        mode: 0777
        directory_mode: yes

    - name: copy db.properties file
      copy:
        src: /iTrust2-v2/iTrust2/src/main/java/db.properties.template
        dest: /iTrust2-v2/iTrust2/src/main/java/db.properties
        remote_src: True

    - name: set the password in db file
      lineinfile:
        path: /iTrust2-v2/iTrust2/src/main/java/db.properties
        regexp: 'password'
        line: 'password {{mysql_pass}}'

    - name: copy hibernate file
      copy:
        src: /iTrust2-v2/iTrust2/src/main/resources/hibernate.properties.template
        dest: /iTrust2-v2/iTrust2/src/main/resources/hibernate.properties
        remote_src: True

    - name: set the password in hibernate file
      lineinfile:
        path: /iTrust2-v2/iTrust2/src/main/resources/hibernate.properties
        regexp: 'hibernate.connection.password'
        line: 'hibernate.connection.password = {{mysql_pass}}'

    - name: set password for email.properties
      copy:
        src: /iTrust2-v2/iTrust2/src/main/java/email.properties.template
        dest: /iTrust2-v2/iTrust2/src/main/java/email.properties
        remote_src: True

    - name: set the username to root in email.properties
      lineinfile:
        path: /iTrust2-v2/iTrust2/src/main/java/email.properties
        regexp: 'username'
        line: 'username {{mail_user}}'

    - name: set password in email.properties
      lineinfile:
        path: /iTrust2-v2/iTrust2/src/main/java/email.properties
        regexp: 'from'
        line: 'from {{mail_user}}'

    - lineinfile:
        path: /iTrust2-v2/iTrust2/src/main/java/email.properties
        regexp: 'password'
        line: 'password {{mail_pass}}'
    - name: give all rights to iTrust
      shell: chmod 777 /iTrust2-v2/

##############################################################

# checkbox coverage report generation files are in '/files/coverage'

    - name: copy checkbox test generation files to checkbox repo
      shell: cp -R /files/coverage/* /checkbox.io/server-side/site/
      # copy:
      #   src: /files/coverage/*
      #   dest: /checkbox.io/server-side/site/
      #   remote_src: True

    - name: install npm packages
      npm:
        path: /checkbox.io/

    - name: run coverage.js with forever
      shell: forever start coverage.js

    - name: run testgenration script
      shell: node testgenerator.js

    - name: Waiting fortests to be generated
      pause:
        minutes: 1

    - name: run test.js created by testgenerator.js
      shell: node test.js


- import_playbook: builder.yml




# Fuzzer Code
- name: Starting Fuzzer
  hosts: jenkins
  become: yes
  gather_facts: no
  pre_tasks:
    - name: Wait for iTrust to complete build
      pause:
        minutes: 6
  roles:
    - role: fuzzer
      JENKINS_USER: "{{lookup ('env','JENKINS_USER') }}"
      JENKINS_PASSWORD: "{{lookup ('env','JENKINS_PASSWORD') }}"
      GIT_NAME: "{{ lookup ('env','GIT_NAME') }}"
      GIT_EMAIL: "{{ lookup ('env','GIT_EMAIL') }}"
...
